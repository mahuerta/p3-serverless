Transform: AWS::Serverless-2016-10-31
Resources:
  usersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.usersHandler
      CodeUri: usersFunction
      Events:
        lambdaGetAllUsers:
          Type: Api
          Properties:
            Path: /users
            Method: GET
        lambdaAddUser:
          Type: Api
          Properties:
            Path: /users
            Method: POST
        lambdaUpdateUser:
          Type: Api
          Properties:
            Path: /users/{userid}
            Method: PUT
        lambdaGetUser:
          Type: Api
          Properties:
            Path: /users/{userid}
            Method: GET
        lambdaDeleteUser:
          Type: Api
          Properties:
            Path: /users/{userid}
            Method: DELETE
        lambdaGetAllBooks:
          Type: Api
          Properties:
            Path: /books
            Method: GET
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:Scan
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/users
  booksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.booksHandler
      CodeUri: booksFunction
      Events:
        lambdaAddBook:
          Type: Api
          Properties:
            Path: /books
            Method: POST
        lambdaUpdateBook:
          Type: Api
          Properties:
            Path: /books/{bookid}
            Method: PUT
        lambdaGetBook:
          Type: Api
          Properties:
            Path: /books/{bookid}
            Method: GET
        lambdaDeleteBook:
          Type: Api
          Properties:
            Path: /books/{bookid}
            Method: DELETE
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:Scan
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/books
  booksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: books
      AttributeDefinitions:
      - AttributeName: bookid
        AttributeType: S
      KeySchema:
      - AttributeName: bookid
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  usersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: users
      AttributeDefinitions:
      - AttributeName: userid
        AttributeType: S
      KeySchema:
      - AttributeName: userid
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
Outputs:
  PublicApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/library/
